function getCookie(n) {
    for (var t, r = n + "=", u = document.cookie.split(";"), i = 0; i < u.length; i++) {
        for (t = u[i]; t.charAt(0) == " ";) t = t.substring(1, t.length);
        if (t.indexOf(r) == 0) return t.substring(r.length, t.length)
    }
    return null
}

function setCookie(n, t, i, r) {
    var u, f;
    i ? (u = new Date, u.setTime(u.getTime() + i * 864e5), f = "; expires=" + u.toGMTString()) : f = "";
    document.cookie = n + "=" + t + f + "; path=/;" + (typeof r != "undefined" ? "domain=" + r : String.Empty)
}

function getBootboxPostion(n, t, i) {
    if (t && t.position) return t.position;
    if (n) return menuBarManager.getPopupEditStatusPosition(n, t);
    var r = $(window).width() / 2 - i.width() / 2;
    return {
        left: r < 0 ? 0 : r,
        top: 100
    }
}

function ShowSecCodePopup(n, t) {
    var e, o, u;
    alpha.detectResponsiveInformation();
    var f = top.mainRootPath + (alpha.user.isEnableOtp ? "otp/verifyotp" : "SecurityCode/VerifySecurityCode"),
        i = 380,
        r = 396;
    alpha.isMobile && (i = i / .7, r = r / .7);
    e = screen.width / 2 - r / 2 + -75;
    o = screen.height / 2 - i / 2;
    top.age.Lock();
    u = top.ageWnd.createInstance();
    u.onClosing = function() {
        try {
            top.age.UnLock();
            t && t.UnLock()
        } catch (n) {}
        return !0
    };
    top.securityCodePopup = u;
    top.popupManager.openWithHanlder(top.securityCodePopup, f, "", r, i, null, null, null, null, null, {
        preUrl: n
    })
}

function CreateDiv(n, t, i, r, u, f) {
    var e = document.createElement("div");
    e.setAttribute("id", n);
    f != "" && (e.style.position = f);
    r != "" && (e.style.left = r);
    u != "" && (e.style.top = u);
    i != "" && (e.className = i);
    t != "" && (e.innerHTML = t);
    document.body.appendChild(e)
}

function RemoveDiv(n) {
    var t = document.getElementById(n);
    t != null && t.parentNode.removeChild(t)
}

function reloadPopUpSetting(n) {
    function u() {
        if (t && t.length && t.attr("src")) t.attr("src", t.attr("src"));
        else if (i && i.length) {
            var n = i.find("#isForcingMode"),
                r = top.main.$("isForcingMode");
            n && r && n.val(r.value);
            i.submit()
        }
    }

    function f() {
        var i = top.main.$("arrayCustID") && top.main.$("arrayCustID").value && top.main.$("arrayCustID").value.length && top.main.$("arrayUserName") && top.main.$("arrayUserName").value && top.main.$("arrayUserName").value.length,
            n, t;
        if (i) {
            n = top.main.$("arrayCustID").value;
            t = top.main.$("arrayUserName").value;
            window.top.$("#main").on("load.oldmain", function() {
                top.main.$("arrayCustID").value = n;
                top.main.$("arrayUserName").value = t;
                u();
                window.top.$("#main").off("load.oldmain")
            })
        } else window.top.$("#main").on("load.oldmain", function() {
            u();
            window.top.$("#main").off("load.oldmain")
        });
        window.top.main.location.reload(!0);
        window.top.clearPopupSubtitle(!0)
    }
    var r = top.ageWnd.popUp[top.ageWnd.popUp.length - 1],
        t, i;
    if (typeof r == "undefined") {
        n ? setTimeout(function() {
            window.top.main.location.reload(!0)
        }, n) : window.top.main.location.reload(!0);
        return
    }
    t = r.find("#popup-iframe");
    i = r.find(".modal-body #target");
    n ? setTimeout(function() {
        f()
    }, n) : f()
}

function hasPopupOpen() {
    var n = top.$('.modal[id^="page-popup"]'),
        t = n.length;
    return !top.$(n[t - 1]).hasClass("hidden")
}

function setSecurityCodePopupTitle(n) {
    var t = top.$('.modal[id^="page-popup"]').find("#popup-title"),
        i;
    t.length > 0 && (i = t.length > 1 ? $(t[1]).text() : $(t[0]).text(), t.text(n), t.attr("data-previous-title", i))
}

function revertSecurityCodePopupTitle() {
    var n = top.$('.modal[id^="page-popup"]').find("#popup-title"),
        t, i;
    n.length > 0 && (t = n.attr("data-previous-title"), i = n.length > 1 ? $(n[1]).text() : $(n[0]).text(), t != i ? n.text(t) : n.text(""))
}

function clearPopupSubtitle(n) {
    function e(t) {
        var u = t.contentWindow.document.getElementsByClassName("setting-header-agency"),
            i = u && u.length ? u[0] : null,
            r;
        i = i || t.contentWindow.document.getElementById("header_main");
        i = i || t.contentWindow.document.getElementById("race-book-positiontaking-header");
        i = i || t.contentWindow.document.getElementById("title_header");
        i = i || t.contentWindow.document.getElementById("button_hr");
        i && (i.style.display = "none");
        n && (r = t.contentWindow.document.getElementsByClassName("subTitle"), r && r.length && (r[0].style.display = "none"))
    }
    var i = top.$('.modal[id^="page-popup"]'),
        f = i.length,
        o = !top.$(i[f - 1]).hasClass("hidden"),
        u;
    if (o) {
        var s = top.$(i[f - 1]),
            r = s.find("#popup-iframe"),
            t = r && r.length ? r[0] : null;
        t && (u = setInterval(function() {
            var n = t.contentDocument || (t.contentWindow ? t.contentWindow.document : null),
                i;
            n && (i = n.readyState == "complete" || n.readyState == "interactive", i) && (e(t), clearInterval(u))
        }, 200), top.ageWnd.fixIOSHeight($(t)), t.onload = function() {
            e(t);
            clearInterval(u)
        })
    }
}

function closePopupAndReloadMainFrameAfterUpdateSuccess(n) {
    function f() {
        top.main.$("txtUserName").blur()
    }

    function i(n) {
        return n.pageYOffset || n.scrollY || n.scrollTop || 0
    }

    function e(n) {
        var t = top.main,
            r = top.$("#main"),
            o = i(t),
            s = i(top.document.body),
            u = "",
            e = "";
        n && (u = t.$("arrayCustID").value, e = t.$("arrayUserName").value);
        r.on("load.oldmain", function() {
            n && (t.$("arrayCustID").value = u, t.$("arrayUserName").value = e);
            f();
            r[0].contentWindow.scrollTo(0, o);
            top.window.scrollTo(0, s);
            r.off("load.oldmain")
        })
    }

    function r() {
        hasPopupOpen() && top.ageWnd.close();
        var n = top.main,
            t = n.document.getElementById("arrayCustID") && n.document.getElementById("arrayCustID").value.length && n.document.getElementById("arrayUserName") && n.document.getElementById("arrayUserName").value.length;
        e(t);
        top.main.location.reload(!0);
        window.top.clearPopupSubtitle(!0)
    }
    var u = top.ageWnd.popUp[top.ageWnd.popUp.length - 1],
        t = u.find("#popup-iframe"),
        o = t && t.length && t.attr("src");
    n ? setTimeout(function() {
        r()
    }, n) : r()
}

function reloadPage() {
    setTimeout("window.location.href = window.location.href", 2e3)
}
var alpha = {
        urls: {
            oldMainRootPath: top.document.getElementById("oldMainRootPath") != null ? top.document.getElementById("oldMainRootPath").value : "not found",
            mainRootPath: top.document.getElementById("mainRootPath") != null ? top.document.getElementById("mainRootPath").value : "not found",
            accountInfoRootPath: top.document.getElementById("accountInfoRootPath") != null ? top.document.getElementById("accountInfoRootPath").value : "not found",
            memberInfoRootPath: top.document.getElementById("memberInfoRootPath") != null ? top.document.getElementById("memberInfoRootPath").value : "not found",
            howToUseRootPath: top.document.getElementById("howToUseRootPath") != null ? top.document.getElementById("howToUseRootPath").value : "not found",
            exTotalBetsForecastRootPath: top.document.getElementById("exTotalBetsForecastRootPath") != null ? top.document.getElementById("exTotalBetsForecastRootPath").value : "not found",
            messageRootPath: top.document.getElementById("messageRootPath") != null ? top.document.getElementById("messageRootPath").value : "not found"
        },
        user: {
            onUserId: document.getElementById("onUserId") != null ? document.getElementById("onUserId").value : "not found",
            passwordHash: document.getElementById("passwordHash") != null ? document.getElementById("passwordHash").value : "not found",
            subPageAccess: document.getElementById("subPageAccess") != null ? document.getElementById("subPageAccess").value : "not found",
            level: document.getElementById("userLevel") != null ? document.getElementById("userLevel").value : "not found",
            isSubAccount: document.getElementById("isSubAccount") != null ? document.getElementById("isSubAccount").value.toLowerCase() === "true" : "not found",
            isShowIntroduction: document.getElementById("isShowIntroduction") != null ? document.getElementById("isShowIntroduction").value.toLowerCase() === "true" : "not found",
            isEnableOtp: document.getElementById("isEnabledOtp") != null ? document.getElementById("isEnabledOtp").value.toLowerCase() === "true" : !1
        },
        core: {
            convertReponseToJson: function(n) {
                return eval("(" + n + ")")
            },
            signOut: function() {
                for (var n = window, t, i; n != n.parent;) n = n.parent;
                if (t = n.$("#isInternal").val(), t = t || "0", i = "logout", t && t.toString() !== "0") $.ajax(i, {
                    success: function() {
                        n.close()
                    }
                });
                else try {
                    localStorage.removeItem(indexManager.currentUrlCookieName)
                } finally {
                    n.location = i
                }
            },
            isIe: function() {
                return /(MSIE|Trident\/|Edge\/)/i.test(navigator.userAgent)
            },
            IsIe8OrLower: function() {
                var n = window.navigator.userAgent.toLowerCase();
                return n.indexOf("msie") != -1 ? parseInt(n.split("msie")[1]) < 9 : !1
            },
            IsAndroid: function() {
                return /Android/i.test(navigator.userAgent)
            }
        },
        isScreenGreater1024: !1,
        isScreenLower768: !1,
        isScreenGreater768AndLower1024: !1,
        isScreenLower1024: !1,
        isMobile: !1,
        detectResponsiveInformation: function() {
            alpha.core.isIe() && ($.fn.modal.Constructor.prototype.enforceFocus = function() {});
            var n = window.screen.width;
            n < 768 ? alpha.isScreenLower768 = !0 : n <= 1024 ? alpha.isScreenGreater768AndLower1024 = !0 : alpha.isScreenGreater1024 = !0;
            alpha.isMobile = isMobile.any
        },
        localStorage: {
            get: function(n) {
                return store.enabled ? store.get(n) : $.cookie(n)
            },
            set: function(n, t) {
                store.enabled ? store.set(n, t) : $.cookie(n, t, alpha.localStorage.getCookieExpireOptions())
            },
            check: function(n) {
                return typeof store.get(n) != "undefined" || typeof $.cookie(n) != "undefined"
            },
            getCookieExpireOptions: function() {
                var n = {
                    expires: 365,
                    path: window.location.pathname
                };
                return alpha.core.isIe() && (n = {
                    expires: 365
                }), n
            }
        },
        showMessage: function(n, t) {
            if (n.empty(), t.isSuccessful) {
                n.html("<div class='msg msg-success'>" + t.message + "<\/div>");
                return
            }
            if (t.isWarning) {
                n.html("<div class='msg msg-warning'>" + t.message + "<\/div>");
                return
            }
            if (t.isFailed) {
                n.html("<div class='msg msg-error'>" + t.message + "<\/div>");
                return
            }
        },
        key: {
            instruction: "Instruction",
            mobileInstruction: "MobileInstruction"
        },
        messageType: {
            Normal: 0,
            Personal: 1,
            Special: 2,
            System: 3
        }
    },
    Result, indexManager, AgeWnd, menuBarManager, oldMainUltilities, popupManager, headerNav, HeaderMessage, DataProccessingNotification, UMMessage, menuBar, briefProfile, PopupAnnouncement;
$(function() {
    $.ajaxSetup({
        beforeSend: function(n) {
            var t = document.getElementsByName("__RequestVerificationToken");
            t.length > 0 && n.setRequestHeader("__RequestVerificationToken", t[0].value)
        },
        error: function(n) {
            n.status === 401 && alpha.core.signOut()
        }
    })
});
Result = function() {
    function n(t) {
        this.code = t.Code;
        this.message = t.Message || "";
        this.isFailed = this.code !== 0;
        this.isSuccessful = this.code === 0;
        this.isWarning = t.Code === n.warningCode
    }
    return n.warningCode = -1e3, n
}();
typeof String.prototype.startsWith != "function" && (String.prototype.startsWith = function(n) {
    return this.slice(0, n.length) == n
});
indexManager = {
    currentTab: null,
    currentUrlCookieName: "DFFKDHFJKLDHFJDH",
    requiredNetworkSpeedCalculation: !1,
    showOldCustomerList: !1,
    domElements: {
        mainFrame: null,
        partialContents: null,
        content: null,
        accountInfoContent: null,
        currentURLCookieName: null,
        pagePopup: null
    },
    urls: {
        reCheckinUrl: alpha.urls.oldMainRootPath + "auth/recheckin"
    },
    init: function() {
        alpha.detectResponsiveInformation();
        alpha.core.IsIe8OrLower() || $.material.init();
        indexManager.cachedDomElements();
        indexManager.loadPartialViews();
        indexManager.registerEvents();
        indexManager.setCurrentUrl();
        indexManager.requiredNetworkSpeedCalculation && setTimeout(indexManager.calculateUserConnectionSpeed, 8e3)
    },
    registerEvents: function() {
        indexManager.domElements.pagePopup.tinyDraggable();
        setTimeout(indexManager.reCheckin, 3e4)
    },
    cachedDomElements: function() {
        indexManager.domElements.partialContents = $(".partial-content");
        indexManager.domElements.content = $("#content");
        indexManager.domElements.accountInfoContent = $("#accountinfo-content");
        indexManager.domElements.currentURLCookieName = $("#currentURLCookieName");
        indexManager.domElements.pagePopup = $("#page-popup");
        indexManager.currentUrlCookieName = indexManager.domElements.currentURLCookieName.val();
        indexManager.requiredNetworkSpeedCalculation = $("#requiredNetworkSpeedCalculation").val() == "1";
        indexManager.showOldCustomerList = $("#showOldCustomerList").val() == "1"
    },
    changeMenu: function(n) {
        indexManager.domElements.mainFrame.attr("src", n)
    },
    reCheckin: function() {
        // $.cookie("ssl", location.href.indexOf("https://") === 0, {
        //     expires: 30,
        //     path: "/"
        // });
        // $.ajax({
        //     type: "POST",
        //     url: indexManager.urls.reCheckinUrl,
        //     headers: {
        //         'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
        //     },
        //     data: {
        //         onid: alpha.user.onUserId
        //     },
        //     success: function(n) {
        //         try {
        //             n = alpha.core.convertReponseToJson(n);
        //             var i = n.errCode,
        //                 t = n.errMsg;
        //             i !== 0 && (t && alert(t), alpha.core.signOut())
        //         } catch (r) {}
        //     },
        //     complete: function() {
        //         setTimeout(indexManager.reCheckin, 3e4)
        //     }
        // })
    },
    loadPartialViews: function() {
        indexManager.domElements.partialContents.each(function(n, t) {
            var i = $(t),
                r = i.data("url");
            r && r.length > 0 && i.load(r + "?" + Math.random(), function() {
                i.hasClass("customer-profile") && briefProfile.init()
            })
        })
    },
    cacheCurrentUrl: function() {
        if ($("#isInternal").val() === "0") {
            var n = document.getElementById("main").contentWindow.location.href;
            localStorage.setItem(indexManager.currentUrlCookieName, n)
        }
    },
    setCurrentUrl: function() {
        var t = indexManager.domElements.content.data("default-url"),
            n = $("#isInternal").val() === "1" ? t : localStorage.getItem(indexManager.currentUrlCookieName) || t;
        if (indexManager.isIgnoreRedirectUrl(n) && (n = t), n.indexOf(headerNav.urls.home) !== -1 && (n = n.replace("Index2", "Index")), indexManager.domElements.mainFrame && indexManager.domElements.mainFrame.length > 0) indexManager.domElements.mainFrame.attr("src", n);
        else {
            indexManager.domElements.content.append('<iframe frameborder="0" id="main" src="' + n + '" width="100%" height="100%" scrolling="auto" name="main" marginwidth="0" marginheight="0" allowtransparency="true" class="iframe-content"><\/iframe>');
            indexManager.domElements.mainFrame = $("#main");
            indexManager.domElements.mainFrame.on("load.newmain", function() {
                var n = indexManager.domElements.mainFrame[0].contentWindow || indexManager.domElements.mainFrame[0].contentDocument;
                indexManager.closeAllOpenDropdowns(n);
                indexManager.closeAllPopup();
                indexManager.cacheCurrentUrl();
                $(n.document).on("click touchend", function() {
                    menuBar.collapseSideBar()
                });
                alpha.isMobile && $(n.document).find(":focus").blur()
            });
            indexManager.domElements.accountInfoContent.load(function() {
                var n = indexManager.domElements.accountInfoContent[0].contentWindow || indexManager.domElements.accountInfoContent[0].contentDocument;
                indexManager.closeAllOpenDropdowns(n)
            })
        }
    },
    closeAllOpenDropdowns: function(n) {
        var t = function() {
            $(".dropdown-submenu").find(".dropdown-menu").hide()
        };
        $(document).on("click touchend", t);
        $("#btn-header-menu").on("click", t);
        $(n.document).on("click touchend", function() {
            $(".dropdown-toggle").each(function(n, t) {
                var i = $(t);
                i.parent().hasClass("open") && i.dropdown("toggle")
            });
            t()
        })
    },
    closeAllPopup: function() {
        var n = localStorage.getItem(indexManager.currentUrlCookieName) || "",
            t = document.getElementById("main").contentWindow.location.href || "",
            i = n.split("?")[0],
            r = t.split("?")[0],
            u = !this.isSameUrl(i, r);
        u && popupManager.closeAllPopup()
    },
    isSameUrl: function(n, t) {
        var u, i, r;
        return (n = this.removeHashFromTheEndOfURL(n.toLowerCase()), t = this.removeHashFromTheEndOfURL(t.toLowerCase()), n === t) ? !0 : (u = Math.min(n.length, t.length), i = n.substring(u), i = i.startsWith("/") ? i.substring(1) : i, i = i || "index", r = t.substring(u), r = r.startsWith("/") ? r.substring(1) : r, r = r || "index", n.substring(0, u) == t.substring(0, u) && i === "index" && r === "index")
    },
    removeHashFromTheEndOfURL: function(n) {
        var t = n.length - 1;
        return n[t] === "#" ? n.substring(0, t) : n
    },
    calculateUserConnectionSpeed: function() {
        var n = document.getElementById("connection-speed");
        (typeof n == "undefined" || n == null) && (n = document.createElement("iframe"), n.id = "connection-speed", n.style.display = "none", n.src = alpha.urls.mainRootPath + "NetworkSpeed/Index", document.body.appendChild(n))
    },
    isIgnoreRedirectUrl: function(n) {
        for (var i = ["error.aspx", "signin.aspx", "securitycode", "dashboard", "partialum"], r = i.length, u = n.toLowerCase(), t = 0; t < r; t++)
            if (u.indexOf(i[t]) > -1) return !0;
        return !1
    }
};
$(function() {
    indexManager.init()
});
top.ph = alpha.user.passwordHash;
top.isNewSite = !0;
top.errCodes = [];
top.errMsgs = [];
top.userNames = [];
top.baseUrl = alpha.urls.oldMainRootPath;
top.exTotalBetsForecastRootPath = alpha.urls.exTotalBetsForecastRootPath;
top.mainRootPath = alpha.urls.mainRootPath;
top.isEnableOtp = alpha.user.isEnableOtp;
top.IsInternalWebVPN = $("#isInternalWebVPN");
top.AGE = top.AGE || {};
top.AGE.PERMISSIONS = alpha.user.subPageAccess;
window.age = window.age || {
    Lock: function() {
        age.ShowMaskDiv();
        age.locked = !0
    },
    UnLock: function() {
        age.HideMaskDiv();
        age.locked = !1
    },
    GetBaseUrl: function() {
        return top.baseUrl
    },
    HideMaskDiv: function() {
        age.divMaskLoading && (age.divMaskLoading.style.display = "none")
    },
    ShowMaskDiv: function() {
        age.divMaskLoading && (age.CalculateViewport(), age.divMaskLoading.style.width = age.viewport.width - 2 + "px", age.divMaskLoading.style.height = age.viewport.height - 2 + "px", age.divMaskLoading.firstChild.style.left = Math.floor(age.viewport.width / 2) + "px", age.divMaskLoading.firstChild.style.top = document.documentElement.scrollTop + "px", age.divMaskLoading.className = "mask-loading-div", age.divMaskLoading.style.display = "block")
    },
    CreateMaskDiv: function() {
        this.divMaskLoading = age.createElement("div");
        var n = age.createElement("div");
        n.style.width = "100px";
        n.style.height = "100px";
        n.style.position = "relative";
        this.divMaskLoading.style.display = "none";
        this.divMaskLoading.style.top = "0px";
        this.divMaskLoading.style.left = "0px";
        this.divMaskLoading.style.filter = "alpha(opacity=50)";
        this.divMaskLoading.appendChild(n);
        document.body.appendChild(this.divMaskLoading)
    },
    createElement: function(n, t) {
        var i = null;
        return i = document.createElementNS ? document.createElementNS("http://www.w3.org/1999/xhtml", n) : document.createElement(n), typeof t != "undefined" && t.appendChild(i), i
    },
    CalculateViewport: function() {
        age.viewport = {
            width: 0,
            height: 0
        };
        oldMainUltilities.isIE() ? (typeof document.documentElement != "undefined" && typeof document.documentElement.clientWidth != "undefined" && document.documentElement.clientWidth != 0 && (age.viewport.width = document.documentElement.clientWidth, age.viewport.height = document.documentElement.clientHeight), age.viewport.width = Math.max(document.body.scrollWidth, age.viewport.width), age.viewport.height = Math.max(document.body.scrollHeight, age.viewport.height)) : (typeof document.documentElement != "undefined" && typeof document.documentElement.scrollWidth != "undefined" && document.documentElement.scrollWidth != 0 && (age.viewport.width = document.documentElement.scrollWidth, age.viewport.height = document.documentElement.scrollHeight), age.viewport.width = Math.max(age.viewport.width, Math.max(document.body.scrollWidth, document.body.clientWidth)), age.viewport.height = Math.max(age.viewport.height, Math.max(document.body.scrollHeight, document.body.clientHeight)))
    },
    SignOut: function() {
        for (var n = window, t, i; n != n.parent;) n = n.parent;
        if (t = n.$("#isInternal").val(), t = t || "0", i = "logout", t.toString() !== "0") $.ajax(i, {
            success: function() {
                n.close()
            }
        });
        else try {
            localStorage.removeItem(indexManager.currentUrlCookieName)
        } finally {
            n.location = i
        }
    },
    updatePopupTitleAfterLoad: function(n, t) {
        var r = n.find(".popup-title").html() || "",
            u = t.contents(),
            i = u.find("title").text();
        r == "" && i != "Home" && n.find(".popup-title").html(i)
    }
};
age.CreateMaskDiv();
AgeWnd = function() {
    return {
        popUp: [],
        callback: [],
        id: null,
        iframeAttributes: null,
        calculateWidthHeight: function(n, t, i) {
            var r = t,
                e = window.top.window.innerWidth,
                f = 250,
                u = window.top.window.innerHeight - (i ? i.top : 0) - 60;
            return u = u < f ? f : u, n = n > e ? e : n, r = r > u ? u : r, r = r < f ? f : r, {
                width: n,
                height: r
            }
        },
        open: function(n, t, i, r, u, f, e, o, s, h, c) {
            var p, a, d, g, l, w, y, k;
            c = c || {};
            r = r || 200;
            p = this.calculateWidthHeight(u, f, {
                top: r
            });
            u = p.width;
            f = p.height;
            t = t || "";
            a = f || 360;
            a = a + 50;
            d = 34;
            g = u + d || 480;
            i = i || 200;
            l = this.popUp.length >= 1 ? this.popUp.pop() : $("#page-popup").clone();
            w = "page-popup-" + Math.random().toString(36).substring(7);
            l.attr("id", w);
            e && l.addClass(e);
            this.id = w;
            var it = oldMainUltilities.getScrollTop(window.document.body),
                rt = oldMainUltilities.getScrollLeft(window.document.body),
                v = !c.isIgnoreAutoHeightOniOS && oldMainUltilities.isiOS(),
                b = {
                    width: g,
                    height: v ? "auto" : a,
                    left: i + rt,
                    top: r + it
                };
            c.resizable && (b.overflow = "hidden");
            v && $.extend(b, {
                "overflow-y": "visible",
                "overflow-x": "auto"
            });
            l.css(b);
            y = l.find("#popup-iframe");
            y.attr("src", "about:blank");
            l.appendTo("body");
            l.removeClass("hidden");
            l.find(".popup-title").html(t);
            v || l.find(".ex-modal").css("height", a + "px");
            var nt = 40,
                tt = 2;
            l.find(".modal-content .modal-body").css("height", v ? "auto" : a - nt - tt + "px");
            k = a - nt - tt - 18;
            ageWnd.setIframeInfo(y, l, k, i, r, v);
            n ? y.attr("src", n) : (ageWnd.copyTargetForm(l), y = l.find(".modal-body").find("#popup-iframe"), ageWnd.setIframeInfo(y, l, k, i, r, v));
            h && (this.iframeAttributes = h, this.iframeAttributes.src = n);
            ageWnd.openPopUpAfterSetIframeSrc(l, v, this, c)
        },
        openPopUpAfterSetIframeSrc: function(n, t, i, r) {
            function f(n) {
                var t = n[0].style;
                return {
                    width: parseInt(t.width.substring(0, t.width.length - 2)),
                    height: parseInt(t.height.substring(0, t.height.length - 2))
                }
            }
            n.on("shown.bs.modal", function() {
                n.find(".modal-dialog").css({
                    transform: "none"
                });
                t && n.css({
                    display: "table"
                })
            });
            if (n.modal({
                    show: !0,
                    backdrop: !1
                }), r.resizable) {
                var e = {},
                    u = {};
                n.resizable({
                    minHeight: 100,
                    minWidth: 100,
                    direction: ["right", "bottom"],
                    start: function() {
                        e = n.offset();
                        u = f(n)
                    },
                    resize: function() {
                        var t = f(n);
                        n.find(".ex-modal").css("height", t.height + "px");
                        n.find(".modal-content .modal-body").css("height", t.height - 42 + "px")
                    },
                    stop: function() {
                        var t = f(n);
                        (u.width != t.width || u.height != t.height) && (u = t, n.offset(e))
                    }
                })
            }
            n.find(".icon-close").unbind("click").click(function() {
                n.find(".modal-body #target").remove();
                n.remove();
                i.onClosing && typeof i.onClosing == "function" && i.onClosing()
            });
            n.tinyDraggable({
                exclude: "a.icon-information-outline.icon-info, button.icon.icon-close.close",
                resizeElement: r.resizable ? ".resizable-handle" : ""
            });
            i.popUp.push(n)
        },
        close: function() {
            var n = this.popUp.pop();
            n && (n.find(".modal-body #target").remove(), n.remove(), this.onClosing && typeof this.onClosing == "function" && this.onClosing())
        },
        setRect: function() {},
        createInstance: function() {
            return new AgeWnd
        },
        copyTargetForm: function(n) {
            var r, t, i;
            n.find(".modal-body").find("#target").remove();
            r = top.main.document.getElementById("target");
            t = $.clone(r);
            n.find(".modal-body").find("#popup-iframe").remove();
            i = "edit-setting-frame-" + Math.random().toString(36).substring(7);
            n.find(".modal-body").append('<iframe id="popup-iframe" frameborder="0" allowtransparency="yes" marginheight="0" marginwidth="0" scrolling="auto" name="' + i + '"><\/iframe>');
            n.find(".modal-body").append(t);
            t.target = i;
            t.submit()
        },
        setIframeInfo: function(n, t, i, r, u) {
            n.css({
                width: "100%",
                height: "100%",
                left: r,
                top: u
            });
            n.load(function() {
                ageWnd.updatePopupTitleAfterLoad(t, n);
                oldMainUltilities.isSmallDevice() && n.contents().find(":focus").blur();
                ageWnd.fixIOSHeight(n)
            })
        },
        updatePopupTitleAfterLoad: function(n, t) {
            var r = n.find(".popup-title").html() || "",
                u = t.contents(),
                i = u.find("title").text();
            r == "" && i != "Home" && n.find(".popup-title").html(i)
        },
        fixIOSHeight: function(n) {
            var i = oldMainUltilities.isiOS(),
                t;
            i && (t = setInterval(function() {
                var r = n[0],
                    u = r.contentDocument || (r.contentWindow ? r.contentWindow.document : null),
                    e, i, f, o, s;
                u && (e = u.readyState == "complete" || u.readyState == "interactive", e) && (i = n.contents().find("body"), f = {
                    height: "auto",
                    position: "relative",
                    float: "left"
                }, i.css(f), i.height() && (i.css(f), o = $(window).height() - 200, s = i.height() + 100, n.css({
                    "min-height": Math.min(s, o) + "px"
                }), i.css({
                    float: "none"
                }), clearInterval(t)))
            }, 200))
        }
    }
};
window.ageWnd = window.ageWnd || new AgeWnd;
window.bootboxConfirm = function(n, t, i, r, u) {
    bootbox.confirm(n, function(n) {
        n && i && typeof i == "function" ? i() : r && typeof r == "function" && r()
    });
    var f = $(".bootbox-confirm .modal-dialog"),
        e = getBootboxPostion(t, u, f);
    f.css({
        left: e.left,
        top: e.top
    })
};
window.bootboxAlert = function(n, t, i, r) {
    bootbox.alert(n, function() {
        i && typeof i == "function" && i()
    });
    var u = $(".bootbox-alert .modal-dialog"),
        f = getBootboxPostion(t, r, u);
    u.css({
        left: f.left || 0,
        top: f.top || 0
    })
};
menuBarManager = {
    getCustInfoScrollTop: function() {
        var n = oldMainUltilities.isSmallDevice();
        return n ? -top.$(".accountinfo-container").scrollTop() : parseFloat(top.$("#mCSB_2_container").css("top").replace(/px/g, ""))
    },
    getPopupEditStatusPosition_CustomerList: function(n) {
        var i = oldMainUltilities.getOffset(n),
            r = 0,
            u = 0,
            f = 0;
        r = 146;
        u = r + i.top;
        f = i.left - 200 + top.$(".sidebar").width();
        var t = {
                left: f,
                top: u
            },
            o = window.top.window.innerHeight,
            e = o - 200;
        return t.top >= e && (t.top = e), t
    },
    getPopupEditStatusPosition_LeftPanel: function(n) {
        var i = oldMainUltilities.getOffset(n),
            r = 0,
            s = menuBarManager.getCustInfoScrollTop(),
            u = 0,
            f = 0,
            h, e;
        r = 164;
        h = 3;
        e = 3;
        u = r + i.top + e + s;
        f = i.left;
        var t = {
                left: f,
                top: u
            },
            c = window.top.window.innerHeight,
            o = c - 200;
        return t.top >= o && (t.top = o), t
    },
    getPopupEditStatusPosition: function(n, t) {
        if (!n) return null;
        if (t && t.type == "DoubleComm_CustomerList") return menuBarManager.getPopupEditStatusPosition_DoubleComm(n);
        if (n.id == "Popup") return menuBarManager.getPopupEditStatusPosition_CustomerList(n);
        var i = menuBarManager.getPopupEditStatusPosition_LeftPanel(n);
        return t && t.type == "TransferCondition" && (i.left += top.$(".sidebar").width() + 3), i
    },
    getPopupEditStatusPosition_DoubleComm: function(n) {
        var i = oldMainUltilities.getOffset(n),
            r = 0,
            u = 0,
            f = 0;
        r = 111;
        u = r + i.top;
        f = i.left - 150 + top.$(".sidebar").width();
        var t = {
                left: f,
                top: u
            },
            o = window.top.window.innerHeight,
            e = o - 200;
        return t.top >= e && (t.top = e), t
    }
};
oldMainUltilities = {
    isIE: function() {
        return /(MSIE|Trident\/|Edge\/)/i.test(navigator.userAgent) && !/opera/i.test(navigator.userAgent)
    },
    isSmallDevice: function() {
        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)
    },
    isiOS: function() {
        return /iPhone|iPad|iPod/i.test(navigator.userAgent)
    },
    getOffset: function(n) {
        for (var t = 0, i = 0; n && !isNaN(n.offsetLeft) && !isNaN(n.offsetTop);) n.style.display == "none" ? (t += parseFloat(n.style.left.replace(/px/g, "")) - n.scrollLeft, i += parseFloat(n.style.top.replace(/px/g, "")) - n.scrollTop) : (t += n.offsetLeft - n.scrollLeft, i += n.offsetTop - n.scrollTop), n = n.offsetParent;
        return {
            top: i,
            left: t
        }
    },
    getScrollLeft: function(n) {
        return n.pageXOffset || n.scrollX || n.scrollLeft || 0
    },
    getScrollTop: function(n) {
        return n.pageYOffset || n.scrollY || n.scrollTop || 0
    }
};
popupManager = {
    positionPadding: 5,
    leftPosition: function() {
        var n = top.$(".sidebar").width();
        return n + top.popupManager.positionPadding
    },
    topPosition: function() {
        return 90 + top.popupManager.positionPadding
    },
    defaultHeight: 1e3,
    defaultWidth: 480,
    openByRelativeUrl: function(n, t, i, r, u, f, e, o, s, h, c) {
        window.top.popupManager.open(age.GetBaseUrl() + n, t, i, r, u, f, e, o, s, h, c)
    },
    openByRelativeUrlNew: function(n, t, i, r, u, f, e, o, s, h, c) {
        window.top.popupManager.open(n, t, i, r, u, f, e, o, s, h, c)
    },
    openMultipleByRelativeUrl: function(n, t, i, r, u, f, e, o, s, h, c) {
        window.top.popupManager.openMultiple(age.GetBaseUrl() + n, t, i, r, u, f, e, o, s, h, c)
    },
    open: function(n, t, i, r, u, f, e, o, s, h, c) {
        var l = window.top.ageWnd;
        window.top.popupManager.openWithHanlder(l, n, t, i, r, u, f, e, o, s, h, c)
    },
    openMultiple: function(n, t, i, r, u, f, e, o, s, h, c) {
        var l = window.top.ageWnd.createInstance();
        window.top.popupManager.openWithHanlder(l, n, t, i, r, u, f, e, o, s, h, c)
    },
    openWithHanlder: function(n, t, i, r, u, f, e, o, s, h, c, l) {
        s = s || window.top.popupManager.leftPosition();
        h = h || window.top.popupManager.topPosition();
        r = r || window.top.popupManager.defaultWidth;
        u = u || window.top.popupManager.defaultHeight;
        i = i || "";
        n.open(t, i, s, h, r, u, f, e, o, c, l)
    },
    close: function() {
        top.ageWnd.close()
    },
    closeAllPopup: function() {
        top.$('.modal[id^="page-popup-"]').remove()
    }
};
headerNav = {
    domElements: {
        isDisableToCheckNewMessage: !1,
        clock: null,
        languageCode: null,
        language: null,
        languageSelectorContainer: null,
        iconLogOut: null,
        iconHome: null,
        iconQRCodeTop: null,
        numberNewMessage: null,
        iconNewMessage: null,
        swapView: null,
        changeLanguageLink: null,
        iconSearch: null,
        linkLogout: null,
        languageDropdownSubMenu: null,
        sideBar: null,
        sideBarContent: null,
        profileImage: null,
        headerNavElement: null,
        liveChat: null
    },
    messageType: {
        Normal: 0,
        Personal: 1,
        Special: 2,
        System: 3
    },
    maximunNewMessage: {
        value: 99,
        text: "99+"
    },
    resources: {
        labelAM: "",
        labelPM: "",
        months: [],
        labelMonths: null
    },
    languageCode: null,
    clockTime: null,
    hideHeaderDropdownMenuTimeout: null,
    urls: {
        home: alpha.urls.mainRootPath + "home",
        qrCodeTop: alpha.urls.memberInfoRootPath + "QRCodeMemberSignIn",
        messages: alpha.urls.messageRootPath + "MessageHistory",
        announcements: alpha.urls.messageRootPath + "Announcement",
        changeLanguage: alpha.urls.mainRootPath + "Language/Change",
        queryUserName: alpha.urls.oldMainRootPath + "_AccountInfo/Handlers/QueryUserName.ashx",
        checkNewMessage: alpha.urls.messageRootPath + "NewMessage/GetNumberOfNewAnnouncement",
        banner: alpha.urls.mainRootPath + "Banner/Get?type="
    },
    unreadMessage: {
        Normal: 0,
        Special: 0,
        System: 0,
        Personal: 0,
        Total: 0
    },
    init: function() {
        headerNav.initClock();
        headerNav.runClock();
        headerNav.cachedDomElements();
        headerNav.setBannerBackgroundImage();
        headerNav.initLanguage();
        headerNav.registerEvents()
    },
    setBannerBackgroundImage: function() {
        var n = headerNav.detectBannerTypeHandler();
        $.ajax({
            type: "GET",
            url: headerNav.urls.banner + n,
            success: function(t) {
                headerNav.getBannerSuccessullyHandler(t, n === 2)
            }
        })
    },
    detectBannerTypeHandler: function() {
        return alpha.isScreenGreater1024 = !1, alpha.isScreenLower768 = !1, alpha.isScreenGreater768AndLower1024 = !1, alpha.isScreenLower1024 = !1, alpha.isMobile = !1, alpha.detectResponsiveInformation(), alpha.isScreenLower768 ? 2 : 1
    },
    getBannerSuccessullyHandler: function(n, t) {
        n.ImageContent && (headerNav.domElements.headerNavElement.addClass("m-banner").css("background-image", "url(" + n.ImageContent + ")"), t && n.MobileBackgroundColor && headerNav.domElements.headerNavElement.css("background-color", n.MobileBackgroundColor))
    },
    initClock: function() {
        headerNav.domElements.clock = $("#clock");
        headerNav.resources.labelAM = "AM";
        headerNav.resources.labelPM = "PM";
        headerNav.resources.labelMonths = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
        var n = headerNav.domElements.clock;
        headerNav.clockTime = new Date(n.attr("data-year"), n.attr("data-month") - 1, n.attr("data-day"), n.attr("data-hour"), n.attr("data-minute"), n.attr("data-second"), 0)
    },
    runClock: function() {
        headerNav.clockTime.setSeconds(headerNav.clockTime.getSeconds() + 1);
        var n = headerNav.formatClockTime(headerNav.clockTime);
        headerNav.domElements.clock.html(n);
        setTimeout(headerNav.runClock, 1e3)
    },
    formatClockTime: function(n) {
        var u = n.getFullYear(),
            f = n.getMonth(),
            e = n.getDate(),
            t = n.getHours(),
            i = n.getMinutes(),
            r = n.getSeconds(),
            o = t >= 12 ? t - 12 : t,
            s = i >= 10 ? i : "0" + i,
            h = r >= 10 ? r : "0" + r,
            c = t >= 12 ? headerNav.resources.labelPM : headerNav.resources.labelAM;
        return o + ":" + s + ":" + h + " " + c + " " + headerNav.resources.labelMonths[f] + " " + e + ", " + u //+ " GMT-4"
    },
    cachedDomElements: function() {
        headerNav.domElements.isDisableToCheckNewMessage = $("#disableMessages").val() == "1";
        headerNav.domElements.languageCode = $("#language-code");
        headerNav.domElements.language = $("#language");
        headerNav.domElements.languageSelectorContainer = $(".language-selector-container");
        headerNav.domElements.iconLogOut = $(".icon-logout");
        headerNav.domElements.iconHome = $(".icon-home");
        headerNav.domElements.iconQRCodeTop = $(".icon-qr-code-top");
        headerNav.domElements.iconNewMessage = $(".icon-bell");
        headerNav.domElements.numberNewMessage = $("#numberOfNewMessage");
        headerNav.domElements.changeLanguageLink = $(".changelanguage-link");
        headerNav.domElements.iconSearch = $(".icon-account-search");
        headerNav.domElements.linkLogout = $(".link-logout");
        headerNav.domElements.languageDropdownSubMenu = $(".dropdown-submenu.language");
        headerNav.domElements.sideBar = $("#side-bar");
        headerNav.domElements.sideBarContent = $(".content-wrapper");
        headerNav.domElements.profileImage = $("#logoProfileImg");
        headerNav.domElements.headerNavElement = $("#header-nav");
        headerNav.domElements.liveChat = $("#liveChat")
    },
    initLanguage: function() {
        headerNav.languageCode = headerNav.domElements.languageCode.val();
        var n = headerNav.domElements.language.data("currentlanguage"),
            t = $(".list-language ." + n + " > a").html();
        headerNav.domElements.languageSelectorContainer.html(t)
    },
    markMessageAsRead: function(n) {
        n == headerNav.messageType.Normal ? (headerNav.unreadMessage.Total = headerNav.unreadMessage.Total - headerNav.unreadMessage.Normal, headerNav.unreadMessage.Normal = 0) : n == headerNav.messageType.Personal ? (headerNav.unreadMessage.Total = headerNav.unreadMessage.Total - headerNav.unreadMessage.Personal, headerNav.unreadMessage.Personal = 0) : n == headerNav.messageType.System ? (headerNav.unreadMessage.Total = headerNav.unreadMessage.Total - headerNav.unreadMessage.System, headerNav.unreadMessage.System = 0) : (headerNav.unreadMessage.Total = headerNav.unreadMessage.Total - headerNav.unreadMessage.Special, headerNav.unreadMessage.Special = 0)
    },
    buildIconNewMessageByType: function(n) {
        headerNav.markMessageAsRead(n);
        headerNav.unreadMessage.Total > 0 ? headerNav.domElements.numberNewMessage.text(headerNav.unreadMessage.Total > headerNav.maximunNewMessage.value ? headerNav.maximunNewMessage.text : headerNav.unreadMessage.Total) : (headerNav.domElements.numberNewMessage.text(""), headerNav.domElements.numberNewMessage.removeClass("badge-title"))
    },
    buildIconNewMessage: function() {
        var n = headerNav.popFirstNewMessage();
        headerNav.unreadMessage.Total > 0 ? headerNav.domElements.numberNewMessage.text(headerNav.unreadMessage.Total > headerNav.maximunNewMessage.value ? headerNav.maximunNewMessage.text : headerNav.unreadMessage.Total) : (headerNav.domElements.numberNewMessage.text(""), headerNav.domElements.numberNewMessage.removeClass("badge-title"));
        indexManager.changeMenu(n)
    },
    checkNewMessage: function() {
        console.log($('meta[name="csrf-token"]').attr('content'));
        headerNav.domElements.isDisableToCheckNewMessage || $.ajax({
            type: "POST",
            url: headerNav.urls.checkNewMessage,
            headers: {
                'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
            },
            success: function(n) {
                n !== undefined && (headerNav.unreadMessage = n, n.Total > 0 ? (headerNav.domElements.numberNewMessage.text(n.Total > headerNav.maximunNewMessage.value ? headerNav.maximunNewMessage.text : n.Total), headerNav.domElements.numberNewMessage.addClass("badge-title")) : (headerNav.domElements.numberNewMessage.text(""), headerNav.domElements.numberNewMessage.removeClass("badge-title")));
                setTimeout(headerNav.checkNewMessage, 12e4)
            }
        })
    },
    popFirstNewMessage: function() {
        return headerNav.unreadMessage.Special > 0 ? (headerNav.markMessageAsRead(headerNav.messageType.Special), headerNav.urls.messages + "?messageType=" + headerNav.messageType.Special) : headerNav.unreadMessage.System > 0 ? (headerNav.markMessageAsRead(headerNav.messageType.System), headerNav.urls.announcements) : headerNav.unreadMessage.Normal > 0 ? (headerNav.markMessageAsRead(headerNav.messageType.Normal), headerNav.urls.messages + "?messageType=" + headerNav.messageType.Normal) : (headerNav.markMessageAsRead(headerNav.messageType.Personal), headerNav.urls.messages + "?messageType=" + headerNav.messageType.Personal)
    },
    registerEvents: function() {
        headerNav.domElements.iconLogOut.on("click", alpha.core.signOut);
        headerNav.domElements.iconHome.on("click", function() {
            indexManager.changeMenu("/portal/agentHome")
        });
        headerNav.domElements.iconQRCodeTop.on("click", function() {
            indexManager.changeMenu(headerNav.urls.qrCodeTop)
        });
        headerNav.domElements.changeLanguageLink.on("click touchend", function(n) {
            headerNav.changeLanguage($(n.target).data("value"))
        });
        headerNav.domElements.languageDropdownSubMenu.on("click", function(n) {
            headerNav.domElements.languageDropdownSubMenu.find(".list-language").toggle();
            n.stopPropagation()
        });
        headerNav.domElements.iconNewMessage.on("click", headerNav.buildIconNewMessage);
        headerNav.domElements.numberNewMessage.on("click", headerNav.buildIconNewMessage);
        headerNav.checkNewMessage();
        headerNav.domElements.liveChat.on("click", window.onLiveChatClick)
    },
    changeLanguage: function(n) {
        $.ajax({
            type: "POST",
            url: headerNav.urls.changeLanguage,
            data: {
                languageCode: n
            },
            success: function(t) {
                if (t !== undefined) {
                    var i = window.location.hostname.replace(/([a-zA-Z0-9]+.)/, "").replace("www.", "");
                    $.cookie("LANGUAGE", n, {
                        expires: 30,
                        path: i
                    });
                    headerNav.reloadPage()
                }
            }
        })
    },
    reloadPage: function() {
        top.location.href = headerNav.removeBookmarksInUrl(top.location.href)
    },
    setProfilePictureOnNav: function(n) {
        $("#userPicture").attr("src", n);
        $("#profile-avatar-image").attr("src", n)
    },
    removeBookmarksInUrl: function(n) {
        if (typeof n != "string") return null;
        var t = n.indexOf("#");
        return t === -1 ? n : n.substr(0, t)
    }
};
$(function() {
    headerNav.init()
});
$(window).on("orientationchange", function() {
    headerNav.setBannerBackgroundImage()
});
HeaderMessage = function() {
    function n(n) {
        var t = this;
        this.publicMessageId = 0;
        this.privateMessageId = 0;
        this.scrollerLeft = 0;
        this.scrollerWidth = 0;
        this.maskWidth = 0;
        this.domElements = {
            privateMessage: null,
            publicMessage: null,
            moveBetsMessage: null,
            marqueeMessage: null,
            hotMessages: null,
            userMessageModal: null,
            currentHotMessage: null,
            scroller: null,
            contentMessage: null,
            showMoreContainer: null,
            showLessContainer: null
        };
        this.urls = {
            mainAppPrivateMessageForm: alpha.urls.messageRootPath + "message/MessageHistory?messageType=1",
            mainAppPublicMessageForm: alpha.urls.messageRootPath + "message/MessageHistory?messageType=0",
            mainAppSpecialMessageForm: alpha.urls.messageRootPath + "message/MessageHistory?messageType=2",
            getMessages: alpha.urls.messageRootPath + "message/MarqueeMessageIndex"
        };
        this.init = function() {
            t.cacheElements();
            t.registerEvents();
            t.getMessages()
        };
        this.viewLiveMessage = function(n) {
            var i = parseInt(t.$(n.currentTarget).attr("messageType"));
            headerNav.buildIconNewMessageByType(i);
            i == alpha.messageType.Normal ? indexManager.changeMenu(t.urls.mainAppPublicMessageForm) : i == alpha.messageType.Personal ? indexManager.changeMenu(t.urls.mainAppPrivateMessageForm) : i == alpha.messageType.Special && indexManager.changeMenu(t.urls.mainAppSpecialMessageForm)
        };
        this.viewMoveBetsMessage = function(n) {
            n.stopPropagation()
        };
        this.resetHotMessageElements = function(n) {
            t.domElements.currentHotMessage.css("min-height", 40);
            n ? (t.domElements.showMoreContainer.addClass("hide"), t.domElements.currentHotMessage.removeClass("brief-content"), t.domElements.currentHotMessage.css("height", "")) : (t.domElements.showLessContainer.addClass("hide"), t.domElements.currentHotMessage.removeClass("brief-content"))
        };
        this.setHotMessageElementStyleByMessageHeight = function(n, i, r) {
            n ? i <= r ? t.domElements.showLessContainer.addClass("hide") : t.domElements.showLessContainer.removeClass("hide") : i <= r ? t.domElements.showMoreContainer.addClass("hide") : (t.domElements.currentHotMessage.addClass("brief-content").height(r), t.domElements.showMoreContainer.removeClass("hide"))
        };
        this.calculateHotMessageHeight = function(n, i) {
            var r = t.domElements.currentHotMessage.height();
            return t.setHotMessageElementStyleByMessageHeight(n, r, i), i < r && (r = n ? r + t.domElements.showLessContainer.height() : i + t.domElements.showMoreContainer.height()), r + 7
        };
        this.calculateHotMessagePopupHeight = function(n) {
            t.resetHotMessageElements(n);
            var i = t.calculateHotMessageHeight(n, 53),
                r = 10 + i;
            t.domElements.userMessageModal.height(r)
        };
        this.showMoreHotMessage = function() {
            t.calculateHotMessagePopupHeight(!0)
        };
        this.showLessHotMessage = function() {
            t.calculateHotMessagePopupHeight(!1)
        };
        this.getMessages = function() {
            t.$.ajax({
                type: "POST",
                url: t.urls.getMessages,
                headers: {
                    'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
                },
                success: t.onSuccessGetMessages
            })
        };
        this.onSuccessGetMessages = function(n) {
            var i = n,
                r = i.MoveBetsInformation.Content || "";
            t.showPublicMessage(i);
            t.domElements.moveBetsMessage.html(r);
            t.showPrivateMessage(i);
            t.applyScroller();
            setTimeout(t.getMessages, 3e5)
        };
        this.showPublicMessage = function(n) {
            var i = n.PublicMessage ? n.PublicMessage : 0,
                u = t.urls.mainAppPublicMessageForm,
                r;
            i.Id && i.Id !== t.publicMessageId ? (t.domElements.publicMessage.html(i.Content + ". ").attr("messageType", i.MessageType), t.publicMessageId = i.Id, t.publicMessageId !== 0 && t.appendMessageToPopup(i.Content)) : (r = t.$("#span-movebets"), r.length && r.remove())
        };
        this.showPrivateMessage = function(n) {
            var i = n.PrivateMessage ? n.PrivateMessage : 0,
                r = t.urls.mainAppPrivateMessageForm;
            i.Id && t.privateMessageId !== i.Id && (t.domElements.privateMessage.html("<font id='private-message-content' color=\"green\">Private message: " + i.Content + "<\/font>").attr("messageType", i.MessageType), t.privateMessageId !== 0 && t.appendMessageToPopup(i.Content))
        };
        this.appendMessageToPopup = function(n) {
            t.domElements.contentMessage.append('<p class="not-shown-message"><\/p>');
            t.domElements.contentMessage.find("p:last").html(n)
        };
        this.applyScroller = function() {
            if (!t.scrollerLeft) {
                t.scrollerLeft = 100;
                t.scrollerWidth = t.domElements.scroller.width();
                t.scroller = t.domElements.scroller[0];
                t.privateMsg = t.domElements.privateMessage[0];
                t.publicMsg = t.domElements.publicMessage[0];
                t.privateMsg.onmouseover = t.publicMsg.onmouseover = t.domElements.moveBetsMessage[0].onmouseover = function() {
                    t.pauseMarquee()
                };
                t.privateMsg.onmouseout = t.publicMsg.onmouseout = t.domElements.moveBetsMessage[0].onmouseout = function() {
                    t.playMarquee()
                };
                var n = t.domElements.marqueeMessage[0];
                t.maskWidth = n.offsetWidth;
                t.scrollMessage()
            }
        };
        this.playMarquee = function() {
            t.scrollerPaused ? (t.scrollerPaused = !1, t.scrollMessageTimeout = setTimeout(t.scrollMessage, 20)) : t.scrollerPaused = !1
        };
        this.pauseMarquee = function() {
            clearTimeout(t.scrollMessageTimeout);
            t.scrollMessageTimeout = 0;
            t.scrollerPaused = !0
        };
        this.scrollMessage = function() {
            t.scrollerPaused || (t.scrollerLeft + t.scrollerWidth < -5 && (t.scrollerLeft = t.maskWidth + 5, t.scrollerWidth = t.domElements.scroller.width()), t.scroller.style.left = t.scrollerLeft-- + "px", t.scrollMessageTimeout = setTimeout(t.scrollMessage, 20))
        };
        this.cacheElements = function() {
            t.domElements.privateMessage = t.$("#private-message");
            t.domElements.publicMessage = t.$("#public-message");
            t.domElements.moveBetsMessage = t.$("#movebets-message");
            t.domElements.marqueeMessage = t.$("#marqueeMessage");
            t.domElements.hotMessages = t.$("#userMessageModalBody");
            t.domElements.contentMessage = t.$("#msg-content");
            t.domElements.userMessageModal = t.$("#userMessageModal");
            t.domElements.currentHotMessage = t.domElements.hotMessages.find("p.current-hot-message");
            t.domElements.scroller = t.$("#scroller");
            t.domElements.showMoreContainer = t.$(".showmore-container");
            t.domElements.showLessContainer = t.$(".showless-container")
        };
        this.registerEvents = function() {
            t.domElements.privateMessage.on("click", t.viewLiveMessage);
            // t.domElements.publicMessage.on("click", t.viewLiveMessage);
            t.domElements.moveBetsMessage.on("click", t.viewMoveBetsMessage);
            t.domElements.showMoreContainer.on("click", t.showMoreHotMessage);
            t.domElements.showLessContainer.on("click", t.showLessHotMessage)
        };
        this.$ = n
    }
    return n
}();
$(function() {
    if (!alpha.isScreenLower768) {
        var n = new HeaderMessage($);
        n.init()
    }
});
DataProccessingNotification = function() {
    function n(n) {
        var t = this;
        this.progressBoxCollapseTimeout = 5e3;
        this.getMessageTimeout = 6e4;
        this.getMoveBetMessageUrl = alpha.urls.messageRootPath + "MarqueeMessage/MoveBet";
        this.getMessage = function() {
            t.$.ajax({
                type: "GET",
                url: t.getMoveBetMessageUrl,
                success: t.onGetMessageSuccess
            })
        };
        this.onGetMessageSuccess = function(n) {
            n && n.Content ? (t.$dataNotificationModal.find(".modal-body").html(n.Content), t.$progressBox.hasClass("hide") && t.showProgressBox()) : t.$progressBox.addClass("hide");
            setTimeout(t.getMessage, t.getMessageTimeout)
        };
        this.onProgressBoxClick = function() {
            t.$dataNotificationModal.modal("show")
        };
        this.$ = n
    }
    return n.prototype.init = function() {
        this.cacheDOMElements();
        this.registerEvents();
        this.getMessage()
    }, n.prototype.cacheDOMElements = function() {
        this.$progressBox = this.$("#progress-box");
        this.$dataNotificationModal = this.$("#data-processing-popup");
        this.$floatSection = this.$(".float-section")
    }, n.prototype.registerEvents = function() {
        var n = this;
        this.$progressBox.on("touchstart", function() {
            n.startPosition = n.$progressBox.position()
        });
        this.$progressBox.on("touchend", function(t) {
            t.preventDefault();
            var i = n.$progressBox.position();
            Math.abs(n.startPosition.top - i.top) < 3 && Math.abs(n.startPosition.left - i.left) < 3 && n.onProgressBoxClick()
        })
    }, n.prototype.showProgressBox = function() {
        var n = this;
        this.$progressBox.removeAttr("style").removeClass("collapsed").removeClass("hide").draggable({
            disabled: !0
        });
        setTimeout(function() {
            n.$progressBox.addClass("collapsed").draggable({
                disabled: !1,
                containment: "#content-wrapper"
            });
            n.$floatSection.css("width", 0)
        }, this.progressBoxCollapseTimeout)
    }, n
}();
$(document).ready(function() {
    if (alpha.isScreenLower768) {
        var n = new DataProccessingNotification($);
        n.init()
    }
});
UMMessage = function() {
    function n(n) {
        this.umMessageData = [];
        this.getUMMessagesTimeout = 36e5;
        this.getUMMessagesUrl = alpha.urls.mainRootPath + "message/UMMessageGet";
        this.doNotShowAgainKey = "UMMessageDoNotShowAgain_";
        this.userId = "";
        this.$ = n
    }
    return n.prototype.init = function() {
        this.cacheDOMElements();
        this.registerEvents();
        this.getUMMessages()
    }, n.prototype.cacheDOMElements = function() {
        var n, t;
        this.$umMessageBox = this.$("#um-message-box");
        this.$umMessagePopup = this.$("#um-message-popup");
        this.$umMessagePopupBody = this.$umMessagePopup.find("#um-message-popup-body");
        n = this.$("#subUserId").val();
        this.userId = n === "0" ? this.$("#userId").val() : n;
        t = this.$("#UMAnnouncementPopupClientIntervalInMinutes");
        t.length && (this.getUMMessagesTimeout = 6e4 * parseInt(t.val()))
    }, n.prototype.registerEvents = function() {
        var t = this,
            n;
        this.$umMessageBox.on("click", function() {
            return t.$umMessagePopup.modal("show")
        });
        n = this.$umMessagePopup.find("#chb-um");
        n.change(function() {
            t.setDontShowAgainLocalStorage(n.is(":checked"))
        });
        this.$umMessagePopup.on("show.bs.modal", function() {
            n.prop("checked", t.getDontShowAgainLocalStorage())
        })
    }, n.prototype.getUMMessages = function() {
        var n = this;
        this.$.get(this.getUMMessagesUrl, function(t) {
            n.getUMMessagesSuccessfully(t)
        }).always(function() {
            setTimeout(function() {
                n.getUMMessages()
            }, n.getUMMessagesTimeout)
        })
    }, n.prototype.getUMMessagesSuccessfully = function(n) {
        if (n.length) {
            var t = this.extractUMMessage(n);
            this.$umMessagePopupBody.html(t.message);
            t.hasNewMessage && (this.getDontShowAgainLocalStorage() || this.$umMessagePopup.modal("show"), this.$umMessageBox.removeClass("hide"))
        } else this.umMessageData.length = 0, this.$umMessagePopupBody.html(""), this.$umMessagePopup.modal("hide"), this.$umMessageBox.addClass("hide")
    }, n.prototype.extractUMMessage = function(n) {
        for (var i, u = [], t = [], f = !1, r = 0, e = n.length; r < e; r++) i = n[r], u.push(i.Id), t.push('<li class="um-message-item">- '), t.push(i.Message), t.push("<\/li>"), this.umMessageData.indexOf(i.Id) === -1 && (f = !0);
        return this.umMessageData = u, {
            hasNewMessage: f,
            message: t.join("")
        }
    }, n.prototype.setDontShowAgainLocalStorage = function(n) {
        alpha.localStorage.set(this.doNotShowAgainKey + this.userId, n ? "1" : "0")
    }, n.prototype.getDontShowAgainLocalStorage = function() {
        return alpha.localStorage.get(this.doNotShowAgainKey + this.userId) === "1"
    }, n
}();
$(function() {
    new UMMessage($).init()
});
menuBar = {
    domElements: {
        subMenuItems: null,
        menuOpeners: null,
        subMenus: null,
        menuItems: null,
        sideBar: null,
        accountInfoTab: null,
        accountInfoContent: null,
        redirectItems: null,
        extraIcon: null,
        header: null,
        userIcon: null,
        mainTab: null,
        mainContent: null,
        mainMenuTab: null,
        mainMenuHeader: null,
        accountInfo: null,
        accountInfoHeader: null,
        hamburgerIcon: null,
        profileImage: null,
        announcementItems: null,
        closeIconOnMobile: null
    },
    urls: {
        accountInfo: alpha.urls.accountInfoRootPath + "customer/SearchAccountt"
    },
    init: function() {
        menuBar.storeElements();
        menuBar.bindEvents();
        menuBar.initSideBar()
    },
    storeElements: function() {
        menuBar.domElements.subMenuItems = $(".sub-menu-item");
        menuBar.domElements.menuOpeners = $(".menu-opener");
        menuBar.domElements.subMenus = $(".sub-menu");
        menuBar.domElements.menuItems = $(".menu-item");
        menuBar.domElements.sideBar = $("#side-bar");
        menuBar.domElements.accountInfoContent = $(".accinfo-content");
        menuBar.domElements.redirectItems = $(".redirect-item");
        menuBar.domElements.extraIcon = $(".extra-box");
        menuBar.domElements.header = $("#header");
        menuBar.domElements.userIcon = $("#user-icon");
        menuBar.domElements.mainTab = $("#main-tab");
        menuBar.domElements.mainContent = $("#content-wrapper");
        menuBar.domElements.mainMenuTab = $("#main-menu-tab");
        menuBar.domElements.accountInfoTab = $("#account-info-tab");
        menuBar.domElements.accountInfoHeader = $("#account-info-header");
        menuBar.domElements.mainMenuHeader = $("#main-menu-header");
        menuBar.domElements.hamburgerIcon = $("#hamburger-icon");
        menuBar.domElements.profileImage = $("#logoProfileImg");
        menuBar.domElements.announcementItems = $("#menu-ANNOUNCEMENTS li a");
        menuBar.domElements.closeIconOnMobile = $("#closeIconOnMobile")
    },
    initSideBar: function() {
        var n = menuBar.domElements.sideBar,
            t = menuBar.domElements.mainContent,
            i = $(".menu-item.active .sub-menu");
        if (alpha.isScreenLower768) {
            n.addClass("hidden-mobile");
            return
        }
        if (alpha.isScreenGreater768AndLower1024) {
            menuBar.collapseLeftPanel();
            return
        }
        alpha.isScreenGreater1024 && (i.show(), n.removeClass("collapsed").removeClass("collapsed-smallsize"), t.removeClass("expanded"))
    },
    isSideBarCollapsed: function() {
        return menuBar.domElements.sideBar.hasClass("collapsed")
    },
    bindEvents: function() {
        menuBar.domElements.menuOpeners.click(function() {
            var t = $(this),
                n = menuBar.domElements.sideBar,
                i = n.hasClass("focusout") && n.hasClass("collapsed-smallsize") && !n.hasClass("docked"),
                r = t.hasClass("active");
            menuBar.expandSideBar();
            i && r ? menuBar.activateMainMenuTab() : menuBar.toggleMainMenu(t)
        });
        menuBar.domElements.subMenuItems.click(function() {
            menuBar.activateSubMenuItem($(this))
        });
        menuBar.domElements.mainMenuHeader.click(menuBar.activateMainMenuTab);
        menuBar.domElements.accountInfoHeader.click(menuBar.activateAccountInfoTab);
        menuBar.domElements.userIcon.click(menuBar.activateAccountInfoTab);
        menuBar.domElements.redirectItems.click(menuBar.collapseSideBar);
        menuBar.domElements.extraIcon.click(menuBar.expandSideBar);
        menuBar.domElements.hamburgerIcon.click(function(n) {
            menuBar.collapseLeftPanel();
            alpha.isScreenLower768 && n.stopPropagation()
        });
        menuBar.registerMouseHoverForDesktopBrowsers();
        menuBar.domElements.announcementItems.click(function() {
            menuBar.clickAnnouncementItem($(this))
        });
        menuBar.domElements.closeIconOnMobile.click(menuBar.collapseSideBar)
    },
    clickAnnouncementItem: function(n) {
        var r = n.attr("href"),
            t = r.split("?"),
            i;
        t.length == 2 ? (i = t[1].split("=")[1], headerNav.buildIconNewMessageByType(i)) : headerNav.buildIconNewMessageByType(headerNav.messageType.System)
    },
    registerMouseHoverForDesktopBrowsers: function() {
        if (!alpha.isMobile) {
            menuBar.domElements.sideBar.off("mouseenter.menubar").on("mouseenter.menubar", function() {
                setTimeout(menuBar.expandSideBar, 50)
            });
            menuBar.domElements.sideBar.off("mouseleave.menubar").on("mouseleave.menubar", menuBar.collapseSideBar)
        }
    },
    collapseLeftPanel: function() {
        var n = menuBar.domElements.sideBar,
            t = menuBar.domElements.mainContent,
            r = menuBar.domElements.header,
            a = menuBar.domElements.mainContent,
            h = menuBar.domElements.closeIconOnMobile,
            c = menuBar.domElements.hamburgerIcon;
        if (alpha.isScreenLower768) n.hasClass("hidden-mobile") ? (t.addClass("expanded-mobile"), n.removeClass("hidden-mobile").addClass("visible-mobile"), r.addClass("expanded-header-mobile"), c.hide(), h.addClass("active")) : (t.removeClass("expanded-mobile"), n.addClass("hidden-mobile collapse-mobile").removeClass("visible-mobile"), r.removeClass("expanded-header-mobile"));
        else {
            var i = "collapsed",
                u = "expanded",
                f = "collapse-image",
                e = "docked",
                l = n.hasClass(i),
                v = n.hasClass("hidden-mobile"),
                o = $(".menu-item.active .sub-menu"),
                s = menuBar.domElements.profileImage;
            l ? (o.show(), n.addClass(e).removeClass(i), t.removeClass(u), s.removeClass(f), menuBar.domElements.accountInfoHeader.hasClass("active") ? (menuBar.domElements.mainMenuTab.hide(), menuBar.domElements.accountInfoTab.show()) : (menuBar.domElements.mainMenuTab.show(), menuBar.domElements.accountInfoTab.hide())) : (o.hide(), n.removeClass(e).addClass(i), t.addClass(u), s.addClass(f), menuBar.domElements.mainMenuTab.show(), menuBar.domElements.accountInfoTab.hide())
        }
        menuBar.positionPTTooltip()
    },
    activateAccountInfoTab: function(n, t) {
        t === void 0 && (t = "");
        menuBar.domElements.accountInfoHeader.addClass("active");
        menuBar.domElements.mainMenuHeader.removeClass("active");
        menuBar.domElements.mainMenuTab.hide();
        menuBar.domElements.accountInfoTab.show();
        var i = menuBar.domElements.accountInfoContent,
            r = i.attr("src");
        r || i.attr("src", menuBar.urls.accountInfo + "?mobileView=" + alpha.isScreenLower768);
        (t !== "" || typeof t == "undefined") && i.attr("src", menuBar.urls.accountInfo + "?mobileView=" + alpha.isScreenLower768 + "&SearchAccountName=" + t);
        i[0].onload = function() {
            var t = $("#navigation").height(),
                i = $(".main-tab").height(),
                n = t - i;
            menuBar.domElements.accountInfoTab.css("height", n);
            alpha.isMobile ? ($("#accountinfo-content").css("height", n - 20), menuBar.domElements.accountInfoContent.addClass("small-device")) : $("#accountinfo-content").css("height", n - 5)
        }
    },
    activateSubMenuItem: function(n) {
        menuBar.domElements.subMenuItems.removeClass("active");
        n.addClass("active");
        alpha.core.isIe() || ($("#main").contents().find("head").append($("#AssetCommonCssLink").val()), $("#main").contents().find("body").empty().block());
        $("#main").attr("src", n.data("url")).attr("target", "main")
    },
    expandSideBar: function() {
        var n = menuBar.domElements.sideBar,
            t;
        n.hasClass("collapsed") && (n.addClass("hovered").removeClass("focusout"), t = $(".menu-item.active .sub-menu"), t.css("display", "block"), menuBar.domElements.accountInfoHeader.hasClass("active") && (menuBar.domElements.mainMenuTab.hide(), menuBar.domElements.accountInfoTab.show()))
    },
    collapseSideBar: function() {
        var n = menuBar.domElements.sideBar,
            i = menuBar.domElements.closeIconOnMobile,
            r = menuBar.domElements.hamburgerIcon,
            t;
        if (alpha.isScreenLower768 && n.hasClass("visible-mobile")) menuBar.domElements.mainContent.removeClass("expanded-mobile"), menuBar.domElements.header.removeClass("expanded-header-mobile"), n.addClass("hidden-mobile").removeClass("visible-mobile"), i.removeClass("active"), r.show();
        else {
            if (n.hasClass("docked")) return;
            n.hasClass("collapsed") && (n.removeClass("hovered").addClass("focusout"), t = $(".menu-item.active .sub-menu"), t.css("display", "none"), menuBar.domElements.mainMenuTab.show(), menuBar.domElements.accountInfoTab.hide())
        }
    },
    activateMainMenuTab: function() {
        menuBar.domElements.accountInfoHeader.removeClass("active");
        menuBar.domElements.accountInfoTab.hide();
        menuBar.domElements.mainMenuHeader.addClass("active");
        menuBar.domElements.mainMenuTab.show()
    },
    toggleMainMenu: function(n) {
        var i, r, t;
        menuBar.activateMainMenuTab();
        i = n.parent();
        r = n.hasClass("active");
        menuBar.domElements.menuItems.removeClass("active");
        menuBar.domElements.menuOpeners.removeClass("active");
        menuBar.domElements.subMenus.slideUp("fast");
        t = n.next();
        r ? (i.removeClass("active"), n.removeClass("active"), t.is("ul") && t.slideUp("fast")) : (i.addClass("active"), n.addClass("active"), t.is("ul") && t.slideDown("fast"))
    },
    positionPTTooltip: function() {
        setTimeout(function() {
            var n = $("#toolTipSettingMinPT"),
                t;
            n && n.length && (t = $(".sidebar").width() + 20, n.css("left", t))
        }, 400)
    }
};
$(function() {
    menuBar.init()
});
briefProfile = {
    maxCountShowTooltip: 4,
    isShowEditProfilePictureTooltip: !1,
    isShowNickNameProfileTooltip: !1,
    autoCloseToolTipTime: 2e4,
    domElements: {
        toolTipBox: null,
        profileTooltip: null,
        changePictureLink: null,
        profileContent: null,
        profilePicture: null,
        adminAndSubAcc: null
    },
    countNickNameToolTipCookieName: null,
    init: function() {
        briefProfile.cachedDomElements();
        briefProfile.checkAndSetShowEditProfilePictureTooltip();
        briefProfile.checkAndShowNickNameTooltip();
        briefProfile.setProfilePictureStorage();
        briefProfile.setActorNameStorage();
        briefProfile.registerEvents()
    },
    checkAndSetShowEditProfilePictureTooltip: function() {
        briefProfile.isShowEditProfilePictureTooltip = briefProfile.domElements.profileContent.data("is-show-profile-picture-tooltip")
    },
    checkAndShowNickNameTooltip: function() {
        var n = briefProfile.getCountNickNameToolTip();
        briefProfile.domElements.profileContent.data("nick-name").length === 0 && n < briefProfile.maxCountShowTooltip && (briefProfile.isShowNickNameProfileTooltip = !0);
        briefProfile.setCountNickNameToolTip(++n);
        briefProfile.showTooltipIntroNickname()
    },
    getCountNickNameToolTip: function() {
        briefProfile.countNickNameToolTipCookieName = briefProfile.domElements.profileContent.data("introduce-nick-name-tooltip-cookie-name");
        var n = $.cookie(briefProfile.countNickNameToolTipCookieName);
        return parseInt(n || 0)
    },
    setCountNickNameToolTip: function(n) {
        $.cookie(briefProfile.countNickNameToolTipCookieName, n, {
            expires: 30,
            path: "/"
        })
    },
    setProfilePictureStorage: function() {
        localStorage.setItem("actorProfilePicture", JSON.stringify({
            ImageId: briefProfile.domElements.profilePicture.attr("profile-image-id"),
            Image: briefProfile.domElements.profilePicture.attr("src"),
            IsDefaultAvatar: briefProfile.domElements.profilePicture.attr("default-avatar")
        }))
    },
    setActorNameStorage: function() {
        var i = localStorage.getItem("actorName"),
            n = $("#Username").val(),
            t = n === i;
        localStorage.setItem("IsOldActor", JSON.stringify(t));
        t || localStorage.setItem("actorName", n)
    },
    registerEvents: function() {
        briefProfile.domElements.profileTooltip.off("click").on("click", briefProfile.hideProfileTooltip);
        briefProfile.domElements.toolTipBox.off("click").on("click", briefProfile.hideTooltipIntroNickname);
        briefProfile.domElements.profilePicture.click(function() {
            menuBar.collapseSideBar()
        });
        briefProfile.domElements.adminAndSubAcc.length > 0 && briefProfile.domElements.adminAndSubAcc.tooltip();
        $(".nickname-box").tooltip()
    },
    cachedDomElements: function() {
        briefProfile.domElements.toolTipBox = $("#tooltip-box");
        briefProfile.domElements.profileTooltip = $("#profileTooltip");
        briefProfile.domElements.changePictureLink = $("#changePictureLink");
        briefProfile.domElements.profileContent = $("#profile-content");
        briefProfile.domElements.profilePicture = $("#logoProfileImg");
        briefProfile.domElements.adminAndSubAcc = $("#adminAndSubAcc")
    },
    hideTooltipIntroNickname: function() {
        briefProfile.domElements.toolTipBox.length > 0 && briefProfile.domElements.toolTipBox.remove();
        briefProfile.showTooltipProfilePicture()
    },
    hideProfileTooltip: function() {
        briefProfile.domElements.profileTooltip.length > 0 && briefProfile.domElements.profileTooltip.remove()
    },
    hideAllTooltips: function() {
        briefProfile.domElements.toolTipBox.length > 0 && briefProfile.domElements.toolTipBox.remove();
        briefProfile.hideProfileTooltip()
    },
    showTooltipProfilePicture: function() {
        briefProfile.domElements.profileTooltip.length > 0 && briefProfile.isShowEditProfilePictureTooltip && (briefProfile.domElements.profileTooltip.show(), setTimeout(function() {
            briefProfile.hideProfileTooltip()
        }, 2e4))
    },
    showTooltipIntroNickname: function() {
        briefProfile.domElements.toolTipBox.length > 0 && briefProfile.isShowNickNameProfileTooltip ? (briefProfile.domElements.toolTipBox.show(), setTimeout(function() {
            briefProfile.hideTooltipIntroNickname()
        }, 2e4)) : briefProfile.showTooltipProfilePicture()
    }
};
PopupAnnouncement = function() {
    function n(n) {
        var t = this;
        this.url = alpha.urls.messageRootPath + "Announcement/Popup";
        this.init = function() {
            var n = t.$(".announcement-modal iframe");
            n.attr("src", t.url)
        };
        this.$ = n
    }
    return n
}();
$(document).ready(function() {
    if ($("#disableMessages").val() != "1") {
        var n = new PopupAnnouncement($);
        n.init()
    }
});