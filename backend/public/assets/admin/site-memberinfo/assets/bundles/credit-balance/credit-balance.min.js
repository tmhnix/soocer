"use strict";
var SingleSelectionDropdownOption = function() {
        function n(n, t, i, r, u) { n === void 0 && (n = "dropdown-single");
            t === void 0 && (t = "UserSelectedId");
            i === void 0 && (i = null);
            r === void 0 && (r = !1);
            u === void 0 && (u = !1);
            this.dropdownId = n;
            this.inputId = t;
            this.onChange = i;
            this.enableClickableOptGroups = r;
            this.enableCollapsibleOptGroups = u } return n }(),
    SingleSelectionDropdownComponent = function() {
        function n(n) { var t = this;
            this.options = new SingleSelectionDropdownOption;
            this.render = function(n) { var i, r, u;
                n === void 0 && (n = new SingleSelectionDropdownOption);
                t.options = t.$.extend({}, t.options, n);
                i = t.$("#" + t.options.dropdownId);
                t.$dropdown = i;
                r = t.$("#" + t.options.inputId);
                t.$hiddenInput = r;
                u = t;
                t.selectedValue = u.getSelectedItem();
                t.$dropdown.multiselect({ multiple: !1, maxHeight: 300, numberDisplayed: 1, includeSelectAllOption: !1, onChange: t.onchange, enableClickableOptGroups: t.options.enableClickableOptGroups, enableCollapsibleOptGroups: t.options.enableCollapsibleOptGroups, optionClass: t.optionClass });
                t.options.enableClickableOptGroups && t.options.enableCollapsibleOptGroups && t.$dropdown.next().find(".multiselect-container li").removeClass("hidden") };
            this.getSelectedItem = function() { var n = [],
                    i = t.$dropdown.find("option:selected"),
                    r = t.$; return i.each(function() { n.push([r(this).val()]) }), n.length ? n[0].toString() : "" };
            this.updateSelectedValue = function() { t.$hiddenInput.val(t.selectedValue) };
            this.onchange = function() { t.selectedValue = t.getSelectedItem();
                t.options.onChange && t.options.onChange() };
            this.optionClass = function(n) { if (t.$(n).data("isnested") === 1) return "multiselect-nested-item" };
            this.changeSelection = function(n) { t.$dropdown.val(n);
                t.$hiddenInput.val(n);
                t.$dropdown.multiselect("select", [n]);
                t.$dropdown.multiselect("refresh") };
            this.$ = n } return n }(),
    PagerOption, PagerComponent, ColumnsControlComponent, CreditBalance;
PagerOption = function() {
    function n(n, t, i, r, u, f) { n === void 0 && (n = null);
        t === void 0 && (t = "report-pager");
        i === void 0 && (i = "report-form");
        r === void 0 && (r = "PageIndex");
        u === void 0 && (u = "PageSize");
        f === void 0 && (f = [50, 100, 200, 500]);
        this.onSelectPage = n;
        this.pagerId = t;
        this.formId = i;
        this.pageIndexId = r;
        this.pageSizeId = u;
        this.pageList = f } return n }();
PagerComponent = function() {
    function n(n) { var t = this;
        this.pageList = [];
        this.render = function(n) { n === void 0 && (n = t.options); var u = t,
                i = t.$.extend({}, t.options, n),
                r = t.$("#" + i.pagerId); return t.$reportForm = t.$("#" + i.formId), t.totalRecords = r.data("totalrecords"), t.pageSize = r.data("pagesize"), t.pageIndex = r.data("pageindex"), t.$pageIndex = t.$('<input type="hidden" id="' + i.pageIndexId + '" name="' + i.pageIndexId + '" value="' + t.pageIndex + '" />'), t.$pageSize = t.$('<input type="hidden" id="' + i.pageSizeId + '" name="' + i.pageSizeId + '" value="' + t.pageSize + '" />'), t.pageList = i.pageList, t.$reportForm.append(t.$pageIndex).append(t.$pageSize), t.isShow() ? (r.pagination({ pageList: t.pageList, total: t.totalRecords, pageSize: t.pageSize, pageNumber: t.pageIndex, showRefresh: !1, onSelectPage: function(n, t) { u.updateHiddenFields(n, t);
                    i.onSelectPage && typeof i.onSelectPage == "function" && i.onSelectPage() }, beforePageText: r.data("labelpage"), afterPageText: r.data("labelof") + " {pages}", displayMsg: r.data("labeldisplayitems") }), r.removeClass("hide")) : r.addClass("hide"), r };
        this.onChange = function() { t.$reportForm.trigger("submit") };
        this.updateHiddenFields = function(n, i) { t.$pageIndex.val(n);
            t.$pageSize.val(i) };
        this.isShow = function() { return t.pageList[0] <= t.totalRecords };
        this.options = new PagerOption(this.onChange);
        this.$ = n } return n }();
ColumnsControlComponent = function() {
    function n(n, t) { var i = this;
        this.timerId = null;
        this.render = function(n) { i.cacheDOMElements();
            i.initColumnsControlHint(n);
            i.columnsControl.html(i.buildHtmlColumnsShowHide(n));
            i.registerEvents(n) };
        this.cacheDOMElements = function() { i.tableHeader = i.$("#tbl-report thead th");
            i.columnsShowHide = i.tableHeader.filter(function(n, t) { return t.className });
            i.columnsControlHint = i.$("#columns-control-hint");
            i.checkboxDontShowAgent = i.$("#chkDontShowAgain");
            i.columnsControl = i.$("#columns-control") };
        this.registerEvents = function(n) { var t = i;
            i.tableHeader.mouseup(function(n) { n.which === 3 && (t.autoHideColumnsControlHint(), t.columnsControl.css({ left: n.clientX + 20 + "px" }).removeClass("hide")) }).on("contextmenu", function() { return !1 });
            i.checkboxDontShowAgent.click(function() { t.setCookieHint(n, 5);
                t.autoHideColumnsControlHint() });
            i.columnsControl.mouseleave(function() { t.columnsControl.addClass("hide") });
            i.columnsControl.find(".columns-control-checkbox").change(function() { t.showHideCheckboxChange(t.$(this), n) }) };
        this.initColumnsControlHint = function(n) { var t = i.getCookieHint(n);
            t < 5 && (i.columnsControlHint.removeClass("hide"), i.timerId = setTimeout(i.autoHideColumnsControlHint, 1e4), i.setCookieHint(n, ++t)) };
        this.autoHideColumnsControlHint = function() { i.timerId !== null && (clearTimeout(i.timerId), i.timerId = null);
            i.columnsControlHint.addClass("hide") };
        this.buildHtmlColumnsShowHide = function(n) { var u = i,
                r = i.getCookieColumnsShowHide(n),
                t; return r.length === 0 && (r = i.setCookieInitializeColumnsShowHide(n, i.columnsShowHide.length)), t = ["<ul>"], i.columnsShowHide.each(function(n, f) { var e = i.$(f),
                    o = "chk-" + n,
                    s = e.attr("class");
                t.push("<li>");
                t.push('<input type="checkbox" class="columns-control-checkbox" id="');
                t.push(o);
                t.push('" data-index="');
                t.push(n.toString());
                t.push('" data-target="');
                t.push(s);
                t.push('"');
                r[n] === "1" ? t.push(' checked="checked"') : u.$("." + s).addClass("hide");
                t.push(" />");
                t.push('<label for="');
                t.push(o);
                t.push('">');
                t.push(e.text());
                t.push("<\/label>");
                t.push("<\/li>") }), t.push("<\/ul>"), t.join("") };
        this.showHideCheckboxChange = function(n, t) { var r = i.getCookieColumnsShowHide(t),
                u = n.data("target");
            n.is(":checked") ? (i.$("." + u).removeClass("hide"), r[n.data("index")] = "1") : (i.$("." + u).addClass("hide"), r[n.data("index")] = "0");
            i.setCookieColumnsShowHide(t, r) };
        this.setCookieHint = function(n, t) { return i.setCookie(n + "X", t.toString(), 30) };
        this.getCookieHint = function(n) { var t = i.getCookie(n + "X"); return t.length ? parseInt(t) : 0 };
        this.setCookieColumnsShowHide = function(n, t) { return i.setCookie(n, t.join(","), 30) };
        this.setCookieInitializeColumnsShowHide = function(n, t) { for (var r = [], u = 0; u < t; u++) r.push("1"); return i.setCookieColumnsShowHide(n, r), r };
        this.getCookieColumnsShowHide = function(n) { var t = i.getCookie(n); return t.length ? t.split(",") : [] };
        this.setCookie = function(n, t, r, u) { var e, f;
            u === void 0 && (u = undefined);
            e = "";
            r && (f = new Date, f.setTime(f.getTime() + r * 864e5), e = ";expires=" + f.toUTCString());
            i.document.cookie = n + "=" + t + e + ";path=/;" + (typeof u != "undefined" ? "domain=" + u : "") };
        this.getCookie = function(n) { for (var t, u = n + "=", f = i.document.cookie.split(";"), r = 0, e = f.length; r < e; r++) { for (t = f[r]; t.charAt(0) === " ";) t = t.substring(1); if (t.indexOf(u) === 0) return t.substring(u.length, t.length) } return "" };
        this.$ = n;
        this.document = t } return n }();
CreditBalance = function() {
    function n(n, t, i, r, u) { var f = this;
        this.init = function() { f.cacheDOMElements();
            f.registerEvents();
            f.registerAutoSuggestion();
            f.statusComponent.render(new SingleSelectionDropdownOption("StatusId", "HiddenStatusId"));
            f.pager.render(new PagerOption(function() { f.$.blockUI();
                f.creditBalanceForm.submit() }, "report-pager", "creditBalanceForm", "PageIndex", "PageSize", [10, 50, 100, 500]));
            f.columnsControl.render(f.$("#CookiePrefix").val());
            f.$("#tbl-report").removeClass("hide").stickyTableHeaders() };
        this.cacheDOMElements = function() { f.creditBalanceForm = f.$("#creditBalanceForm");
            f.submitButton = f.$("#btn-submit");
            f.userNameCredit = f.$(".username-credit");
            f.$reportLegend = f.$("#report-legend");
            f.$iconInformation = f.$("#icon-information") };
        this.givenPopupOnclosing = function(n, t, i, r) { n === void 0 && (n = null);
            t === void 0 && (t = !1);
            i === void 0 && (i = 0);
            r === void 0 && (r = 0);
            t === !0 ? setTimeout(function() { window.location = window.location;
                window.top.updateGivenCreditPopup.close() }, 1e3) : window.top.updateGivenCreditPopup.close() };
        this.registerEvents = function() { var n = f;
            f.submitButton.click(function() { n.$.blockUI();
                // n.$("#cusid").val("");
                n.$("#autoSuggestionCustId").val("");
                n.$("#PageIndex").val("1") });
            f.userNameCredit.click(function() { 
                n.$.blockUI();
                // n.$("#cusid").val($(this).data("custid"));
                n.$("#autoSuggestionCustId").val($(this).data("custid"));
                $( "#creditBalanceForm" ).submit();
            });
            f.$(".creditlink").click(function() { var t = n.$(this),
                    r = "users/" + t.data("custid") + "/updateWallet",
                    i;
                (n.topWindow.updateGivenCreditPopup === null || n.topWindow.updateGivenCreditPopup === undefined) && (n.topWindow.updateGivenCreditPopup = n.topWindow.ageWnd.createInstance());
                i = n.$("#GivenCreditPopupTitle").val() + " -  " + t.data("username");
                n.topWindow.updateGivenCreditPopup.onClosing = n.givenPopupOnclosing;
                n.topWindow.popupManager.openWithHanlder(n.topWindow.updateGivenCreditPopup, r, i, 470, 360) });
            f.$(".balancelink, .yesterdaybalancelink").click(function() { var t = "_Transfer/Agent/MemberTransfer.aspx?custid=" + n.$(this).data("custid"),
                    i = navigator.userAgent.match(/iPad/i) != null ? 430 : 534;
                n.topWindow.popupManager.openByRelativeUrl(t, "", 520, i) });
            f.$(".iplink").click(function() { n.topWindow.popupManager.openByRelativeUrlNew("//cqcounter.com/whois/?query=" + this.text, "", 800, 400) });
            f.$iconInformation.on("click", f.showLegend) };
        this.showLegend = function() { f.$reportLegend.modal({ show: !0, backdrop: !1 }); var n = f.$iconInformation.position();
            f.$reportLegend.css({ bottom: "auto", top: n.top + 90, left: 0 }) };
        this.registerAutoSuggestion = function() { var t = f.$("#OldMainRootPath").val() + "_GlobalResources/Handlers/QueryUserName.ashx",
                i = f.$("#autoSuggestionCustId").val(),
                n = f.$(".typeahead"),
                r = function(n, r) { return f.$.get(t, { custid: i, isdir: 1, query: n }, function(n) { var t = eval("(" + n + ")").suggestions; return !t || !t.length ? r(["Not found"]) : r(t) }) },
                u = { minLength: 2, items: 10, name: "UserName", autoSelect: !1, delay: 200, source: r, displayText: function(n) { return n[0] + "#" + n[1] + " " + n[2] }, highlighter: function(n) { var t = n.split("#"); return t[0] + "<br/>" + t[1] }, afterSelect: function(t) { return n.val(t[0]) } };
            n.typeahead(u).on("keyup", function(n) { n.keyCode === 13 && f.submitButton.trigger("click") }) };
        this.$ = n;
        this.topWindow = t;
        this.pager = i;
        this.columnsControl = r;
        this.statusComponent = u } return n }();
$(function() { var n = new CreditBalance($, window.top, new PagerComponent($), new ColumnsControlComponent($, window.document), new SingleSelectionDropdownComponent($));
    n.init() });
    